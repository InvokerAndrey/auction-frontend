{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Documents/auctionproject/frontend/src/screens/DutchAuctionDetailScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, Button, ListGroup, InputGroup, Form } from 'react-bootstrap';\nimport AuctionService from '../services/AuctionService';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Timer from '../components/Timer';\nimport Offers from \"../components/Offers\";\nimport { StatusEnum, TypeEnum } from '../constants/auctionConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DutchAuctionDetailScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [status, setStatus] = useState(0);\n  const [newPrice, setNewPrice] = useState(0);\n  const [openingDate, setOpeningDate] = useState('');\n  const [closingDate, setClosingDate] = useState('');\n  const [newOffers, setNewOffers] = useState(0);\n  const socket = new WebSocket(`ws://localhost:8000/ws/auction/`);\n\n  socket.onopen = data => {\n    console.log('open socket');\n  };\n\n  socket.onmessage = event => {\n    let data = JSON.parse(event.data);\n    console.log('From server:', data);\n\n    if (data.content.id == match.params.id) {\n      setStatus(data.content.auction_status);\n      setNewPrice(data.content.end_price);\n      setOpeningDate(data.content.opening_date);\n      setClosingDate(data.content.closing_date);\n      setNewOffers(data.content.offers);\n    }\n  };\n\n  const auctionService = new AuctionService();\n  const dispatch = useDispatch();\n  const auctionDetail = useSelector(state => state.auctionDetail);\n  const {\n    loading,\n    auction,\n    error\n  } = auctionDetail;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const offerMake = useSelector(state => state.offerMake);\n  const {\n    laoding: loadingOffer,\n    success: successOffer,\n    error: errorOffer\n  } = offerMake;\n  useEffect(() => {\n    dispatch(auctionService.getAuctionDetail(match.params.id));\n  }, [dispatch, match]);\n\n  const makeOfferHandler = e => {\n    e.preventDefault();\n    dispatch(auctionService.makeOffer(match.params.id, {\n      price\n    }));\n  }; // Offer price\n\n\n  const [price, setPrice] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-dark my-3\",\n      onClick: () => history.goBack(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: auction.lot.item.photo,\n            alt: auction.lot.item.title,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: auction.lot.item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: auction.lot.item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Type: \", TypeEnum.getVerboseById(auction.type)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Status: \", status ? StatusEnum.getVerboseById(status) : StatusEnum.getVerboseById(auction.auction_status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Start price: $\", auction.start_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Current offer: $\", newPrice ? newPrice : auction.end_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Price step: $\", auction.price_step]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Opening date: \", openingDate ? openingDate : auction.opening_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Your offer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this), loadingOffer && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 62\n              }, this), errorOffer && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: errorOffer.non_field_errors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 60\n              }, this), successOffer && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: \"Offer has been made\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  disabled: status ? status != StatusEnum.IN_PROGRESS : auction.auction_status != StatusEnum.IN_PROGRESS || !userInfo,\n                  value: price // defaultValue={newPrice ? (Number(newPrice) + Number(auction.price_step)).toFixed(2)\n                  //                         : (Number(auction.end_price) + Number(auction.price_step)).toFixed(2)}\n                  ,\n                  onChange: e => setPrice(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: makeOfferHandler,\n                  className: \"btn-block inline\",\n                  variant: \"success\",\n                  disabled: status ? status != StatusEnum.IN_PROGRESS : auction.auction_status != StatusEnum.IN_PROGRESS || !userInfo,\n                  children: \"Offer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: newOffers ? /*#__PURE__*/_jsxDEV(Offers, {\n            id: match.params.id,\n            newOffers: newOffers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(Offers, {\n            id: match.params.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DutchAuctionDetailScreen, \"QyxBsjO2Pec5PldXGgFKKptpJew=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = DutchAuctionDetailScreen;\nexport default DutchAuctionDetailScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DutchAuctionDetailScreen\");","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/screens/DutchAuctionDetailScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Image","Button","ListGroup","InputGroup","Form","AuctionService","Loader","Message","Timer","Offers","StatusEnum","TypeEnum","DutchAuctionDetailScreen","match","history","status","setStatus","newPrice","setNewPrice","openingDate","setOpeningDate","closingDate","setClosingDate","newOffers","setNewOffers","socket","WebSocket","onopen","data","console","log","onmessage","event","JSON","parse","content","id","params","auction_status","end_price","opening_date","closing_date","offers","auctionService","dispatch","auctionDetail","state","loading","auction","error","userLogin","userInfo","offerMake","laoding","loadingOffer","success","successOffer","errorOffer","getAuctionDetail","makeOfferHandler","e","preventDefault","makeOffer","price","setPrice","goBack","lot","item","photo","title","description","getVerboseById","type","start_price","price_step","non_field_errors","IN_PROGRESS","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, Button, ListGroup, InputGroup, Form } from 'react-bootstrap';\n\nimport AuctionService from '../services/AuctionService'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Timer from '../components/Timer'\nimport Offers from \"../components/Offers\";\nimport { StatusEnum, TypeEnum } from '../constants/auctionConstants'\n\n\nfunction DutchAuctionDetailScreen({match, history}) {\n\n    const [status, setStatus] = useState(0)\n    const [newPrice, setNewPrice] = useState(0)\n    const [openingDate, setOpeningDate] = useState('')\n    const [closingDate, setClosingDate] = useState('')\n    const [newOffers, setNewOffers] = useState(0)\n\n    const socket = new WebSocket(`ws://localhost:8000/ws/auction/`);\n    socket.onopen = (data) => {\n        console.log('open socket')\n    }\n\n    socket.onmessage = (event) => {\n        let data = JSON.parse(event.data);\n        console.log('From server:', data)\n        if (data.content.id == match.params.id) {\n            setStatus(data.content.auction_status)\n            setNewPrice(data.content.end_price)\n            setOpeningDate(data.content.opening_date)\n            setClosingDate(data.content.closing_date)\n            setNewOffers(data.content.offers)\n        }\n    }\n\n    const auctionService = new AuctionService()\n\n    const dispatch = useDispatch()\n\n    const auctionDetail = useSelector(state => state.auctionDetail)\n    const {loading, auction, error} = auctionDetail\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const offerMake = useSelector(state => state.offerMake)\n    const { laoding: loadingOffer, success: successOffer, error: errorOffer  } = offerMake\n\n    useEffect(() => {\n        dispatch(auctionService.getAuctionDetail(match.params.id))\n    }, [dispatch, match])\n\n    const makeOfferHandler = (e) => {\n        e.preventDefault()\n        dispatch(auctionService.makeOffer(match.params.id, {price}))\n    }\n     // Offer price\n    const [price, setPrice] = useState(0)\n\n    return (\n        <div>\n            <Button className=\"btn btn-dark my-3\" onClick={() => history.goBack()}>\n                Back\n            </Button>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={4}>\n                                    <Image src={auction.lot.item.photo} alt={auction.lot.item.title} fluid />\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{auction.lot.item.title}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>{auction.lot.item.description}</h3>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                                <Col md={5}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>Type: {TypeEnum.getVerboseById(auction.type)}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Status: {status ? StatusEnum.getVerboseById(status) : StatusEnum.getVerboseById(auction.auction_status)}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Start price: ${auction.start_price}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Current offer: ${newPrice ? newPrice : auction.end_price}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Price step: ${auction.price_step}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Opening date: {openingDate ? openingDate : auction.opening_date}</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Frequency</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h3>Your offer:</h3>\n                                            {loadingOffer && <Loader />}\n                                            {errorOffer && <Message variant='danger'>{errorOffer.non_field_errors}</Message>}\n                                            {successOffer && <Message variant='success'>Offer has been made</Message> }\n                                            <Form.Group className='input-group'>\n                                                <InputGroup.Text>$</InputGroup.Text>\n                                                <Form.Control\n                                                    type='number'\n                                                    disabled={\n                                                        status ? status != StatusEnum.IN_PROGRESS\n                                                            : auction.auction_status != StatusEnum.IN_PROGRESS\n                                                        || !userInfo\n                                                    }\n                                                    value={price}\n                                                    // defaultValue={newPrice ? (Number(newPrice) + Number(auction.price_step)).toFixed(2)\n                                                    //                         : (Number(auction.end_price) + Number(auction.price_step)).toFixed(2)}\n                                                    onChange={(e) => setPrice(e.target.value)}\n                                                >\n                                                </Form.Control>\n                                                <Button\n                                                    onClick={makeOfferHandler}\n                                                    className='btn-block inline'\n                                                    variant='success'\n                                                    disabled={\n                                                        status ? status != StatusEnum.IN_PROGRESS\n                                                            : auction.auction_status != StatusEnum.IN_PROGRESS\n                                                        || !userInfo\n                                                    }\n                                                >\n                                                    Offer\n                                                </Button>\n                                            </Form.Group>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                                <Col md={3}>\n                                    { newOffers ? <Offers id={match.params.id} newOffers={newOffers}/>\n                                        : <Offers id={match.params.id}/>}\n                                </Col>\n                            </Row>\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default DutchAuctionDetailScreen\n"]},"metadata":{},"sourceType":"module"}