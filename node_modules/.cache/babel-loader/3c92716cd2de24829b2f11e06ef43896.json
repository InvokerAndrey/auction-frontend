{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nexport default class UserService {\n  constructor() {\n    this.BASE_URL = '/api/users/';\n    this.LOGIN_URL = BASE_URL + 'login/';\n\n    this.login = (username, password) => async dispatch => {\n      try {\n        dispatch({\n          type: USER_LOGIN_REQUEST\n        });\n        const config = {\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n        const {\n          data\n        } = await axios.post(this.LOGIN_URL, {\n          'username': username,\n          'password': password\n        }, config);\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: USER_LOGIN_FAIL,\n          payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        });\n      }\n    };\n\n    this.logout = () => dispatch => {\n      localStorage.removeItem('userInfo');\n      dispatch({\n        type: USER_LOGOUT\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/services/UserService.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","UserService","BASE_URL","LOGIN_URL","login","username","password","dispatch","type","config","headers","data","post","localStorage","setItem","JSON","stringify","payload","error","response","detail","message","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,WAJJ,QAKQ,4BALR;AAQA,eAAe,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAC7BC,QAD6B,GAClB,aADkB;AAAA,SAE7BC,SAF6B,GAEjBD,QAAQ,GAAG,QAFM;;AAAA,SAI7BE,KAJ6B,GAIrB,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AAChD,UAAI;AACAA,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEX;AADD,SAAD,CAAR;AAIA,cAAMY,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf;AAMA,cAAM;AAACC,UAAAA;AAAD,YAAS,MAAMf,KAAK,CAACgB,IAAN,CACjB,KAAKT,SADY,EAEjB;AACI,sBAAYE,QADhB;AAEI,sBAAYC;AAFhB,SAFiB,EAMjBG,MANiB,CAArB;AASAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEAJ,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEV,kBADD;AAELmB,UAAAA,OAAO,EAAEN;AAFJ,SAAD,CAAR;AAIH,OA1BD,CA0BE,OAAOO,KAAP,EAAc;AAEZX,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAET,eADD;AAELkB,UAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAECF,KAAK,CAACG;AAJX,SAAD,CAAR;AAMH;AACJ,KAxC4B;;AAAA,SA2C7BC,MA3C6B,GA2CpB,MAAOf,QAAD,IAAc;AACzBM,MAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AAEAhB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAER;AADD,OAAD,CAAR;AAGH,KAjD4B;AAAA;;AAAA","sourcesContent":["import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT\n } from '../constants/userConstants'\n\n\nexport default class UserService {\n    BASE_URL = '/api/users/'\n    LOGIN_URL = BASE_URL + 'login/'\n\n    login = (username, password) => async (dispatch) => {\n        try {\n            dispatch({\n                type: USER_LOGIN_REQUEST\n            })\n    \n            const config = {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            }\n    \n            const {data} = await axios.post(\n                this.LOGIN_URL,\n                {\n                    'username': username,\n                    'password': password\n                },\n                config\n            )\n    \n            localStorage.setItem('userInfo', JSON.stringify(data))\n    \n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            })\n        } catch (error) {\n            \n            dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                        : error.message,\n            })\n        }\n    }\n    \n    \n    logout = () => (dispatch) => {\n        localStorage.removeItem('userInfo')\n    \n        dispatch({\n            type: USER_LOGOUT\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}