{"ast":null,"code":"export const AUCTION_LIST_REQUEST = 'AUCTION_LIST_REQUEST';\nexport const AUCTION_LIST_SUCCESS = 'AUCTION_LIST_SUCCESS';\nexport const AUCTION_LIST_FAIL = 'AUCTION_LIST_FAIL';\nexport const AUCTION_DETAIL_REQUEST = 'AUCTION_DETAIL_REQUEST';\nexport const AUCTION_DETAIL_SUCCESS = 'AUCTION_DETAIL_SUCCESS';\nexport const AUCTION_DETAIL_FAIL = 'AUCTION_DETAIL_FAIL';\n\nclass Enum {\n  static getVerboseById(id) {\n    for (let attr in this.obj) {\n      if (this.obj.hasOwnProperty(attr) && this.obj[attr].id === id) {\n        return this.obj[attr].verbose;\n      }\n    }\n\n    return null;\n  }\n\n  static getVerboseList() {\n    let verboseList = [];\n\n    for (let attr in this.obj) {\n      if (this.obj.hasOwnProperty(attr)) {\n        verboseList.push(this.obj[attr].verbose);\n      }\n    }\n\n    return verboseList;\n  }\n\n}\n\nEnum.obj = {};\nexport class StatusEnum extends Enum {\n  static get PENDING() {\n    return this.obj.PENDING.id;\n  }\n\n  static get IN_PROGRESS() {\n    return this.obj.IN_PROGRESS.id;\n  }\n\n  static get CLOSED() {\n    return this.obj.CLOSED.id;\n  }\n\n}\nStatusEnum.obj = {\n  PENDING: {\n    id: 1,\n    verbose: 'pending...'\n  },\n  IN_PROGRESS: {\n    id: 2,\n    verbose: 'in progress'\n  },\n  CLOSED: {\n    id: 3,\n    verbose: 'closed'\n  }\n};\nexport class TypeEnum extends Enum {\n  static get ENGLISH() {\n    return this.obj.ENGLISH.id;\n  }\n\n  static get DUTCH() {\n    return this.obj.DUTCH.id;\n  }\n\n}\nTypeEnum.obj = {\n  ENGLISH: {\n    id: 1,\n    verbose: 'TEA'\n  },\n  DUTCH: {\n    id: 2,\n    verbose: 'WEED'\n  }\n};","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/constants/auctionConstants.js"],"names":["AUCTION_LIST_REQUEST","AUCTION_LIST_SUCCESS","AUCTION_LIST_FAIL","AUCTION_DETAIL_REQUEST","AUCTION_DETAIL_SUCCESS","AUCTION_DETAIL_FAIL","Enum","getVerboseById","id","attr","obj","hasOwnProperty","verbose","getVerboseList","verboseList","push","StatusEnum","PENDING","IN_PROGRESS","CLOSED","TypeEnum","ENGLISH","DUTCH"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAGP,MAAMC,IAAN,CAAW;AAGc,SAAdC,cAAc,CAACC,EAAD,EAAK;AACtB,SAAK,IAAIC,IAAT,IAAiB,KAAKC,GAAtB,EAA2B;AACvB,UAAI,KAAKA,GAAL,CAASC,cAAT,CAAwBF,IAAxB,KAAiC,KAAKC,GAAL,CAASD,IAAT,EAAeD,EAAf,KAAsBA,EAA3D,EAA+D;AAC3D,eAAO,KAAKE,GAAL,CAASD,IAAT,EAAeG,OAAtB;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AAEoB,SAAdC,cAAc,GAAG;AACpB,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIL,IAAT,IAAiB,KAAKC,GAAtB,EAA2B;AACvB,UAAI,KAAKA,GAAL,CAASC,cAAT,CAAwBF,IAAxB,CAAJ,EAAmC;AAC/BK,QAAAA,WAAW,CAACC,IAAZ,CAAiB,KAAKL,GAAL,CAASD,IAAT,EAAeG,OAAhC;AACH;AACJ;;AACD,WAAOE,WAAP;AACH;;AApBM;;AAALR,I,CACKI,G,GAAM,E;AAuBjB,OAAO,MAAMM,UAAN,SAAyBV,IAAzB,CAA8B;AAOf,aAAPW,OAAO,GAAG;AACjB,WAAO,KAAKP,GAAL,CAASO,OAAT,CAAiBT,EAAxB;AACH;;AAEqB,aAAXU,WAAW,GAAG;AACrB,WAAO,KAAKR,GAAL,CAASQ,WAAT,CAAqBV,EAA5B;AACH;;AAEgB,aAANW,MAAM,GAAG;AAChB,WAAO,KAAKT,GAAL,CAASS,MAAT,CAAgBX,EAAvB;AACH;;AAjBgC;AAAxBQ,U,CACFN,G,GAAM;AACTO,EAAAA,OAAO,EAAE;AAACT,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,OAAO,EAAE;AAAjB,GADA;AAETM,EAAAA,WAAW,EAAE;AAACV,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,OAAO,EAAE;AAAjB,GAFJ;AAGTO,EAAAA,MAAM,EAAE;AAACX,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,OAAO,EAAE;AAAjB;AAHC,C;AAoBjB,OAAO,MAAMQ,QAAN,SAAuBd,IAAvB,CAA4B;AAMb,aAAPe,OAAO,GAAG;AACjB,WAAO,KAAKX,GAAL,CAASW,OAAT,CAAiBb,EAAxB;AACH;;AAEe,aAALc,KAAK,GAAG;AACf,WAAO,KAAKZ,GAAL,CAASY,KAAT,CAAed,EAAtB;AACH;;AAZ8B;AAAtBY,Q,CACFV,G,GAAM;AACTW,EAAAA,OAAO,EAAE;AAACb,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,OAAO,EAAE;AAAjB,GADA;AAETU,EAAAA,KAAK,EAAE;AAACd,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,OAAO,EAAE;AAAjB;AAFE,C","sourcesContent":["export const AUCTION_LIST_REQUEST = 'AUCTION_LIST_REQUEST'\nexport const AUCTION_LIST_SUCCESS = 'AUCTION_LIST_SUCCESS'\nexport const AUCTION_LIST_FAIL = 'AUCTION_LIST_FAIL'\n\nexport const AUCTION_DETAIL_REQUEST = 'AUCTION_DETAIL_REQUEST'\nexport const AUCTION_DETAIL_SUCCESS = 'AUCTION_DETAIL_SUCCESS'\nexport const AUCTION_DETAIL_FAIL = 'AUCTION_DETAIL_FAIL'\n\n\nclass Enum {\n    static obj = {}\n\n    static getVerboseById(id) {\n        for (let attr in this.obj) {\n            if (this.obj.hasOwnProperty(attr) && this.obj[attr].id === id) {\n                return this.obj[attr].verbose\n            }\n        }\n        return null\n    }\n\n    static getVerboseList() {\n        let verboseList = []\n        for (let attr in this.obj) {\n            if (this.obj.hasOwnProperty(attr)) {\n                verboseList.push(this.obj[attr].verbose)\n            }\n        }\n        return verboseList\n    }\n}\n\n\nexport class StatusEnum extends Enum {\n    static obj = {\n        PENDING: {id: 1, verbose: 'pending...'},\n        IN_PROGRESS: {id: 2, verbose: 'in progress'},\n        CLOSED: {id: 3, verbose: 'closed'},\n    }\n\n    static get PENDING() {\n        return this.obj.PENDING.id\n    }\n\n    static get IN_PROGRESS() {\n        return this.obj.IN_PROGRESS.id\n    }\n\n    static get CLOSED() {\n        return this.obj.CLOSED.id\n    }\n}\n\n\nexport class TypeEnum extends Enum {\n    static obj = {\n        ENGLISH: {id: 1, verbose: 'TEA'},\n        DUTCH: {id: 2, verbose: 'WEED'},\n    }\n\n    static get ENGLISH() {\n        return this.obj.ENGLISH.id\n    }\n\n    static get DUTCH() {\n        return this.obj.DUTCH.id\n    }\n}\n"]},"metadata":{},"sourceType":"module"}