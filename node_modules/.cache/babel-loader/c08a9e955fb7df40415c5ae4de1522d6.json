{"ast":null,"code":"import axios from 'axios';\nimport { AUCTION_LIST_REQUEST, AUCTION_LIST_SUCCESS, AUCTION_LIST_FAIL, AUCTION_DETAIL_REQUEST, AUCTION_DETAIL_SUCCESS, AUCTION_DETAIL_FAIL } from '../constants/auctionConstants';\nimport { OFFER_MAKE_REQUEST, OFFER_MAKE_SUCCESS, OFFER_MAKE_FAIL, OFFER_LIST_REQUEST, OFFER_LIST_SUCCESS, OFFER_LIST_FAIL } from '../constants/offerConstants';\nexport default class AuctionService {\n  constructor() {\n    this.BASE_URL = 'api/auction/';\n    this.LIST_URL = this.BASE_URL + 'list/';\n    this.MAKE_OFFER_URL = '/make-offer/';\n\n    this.listAuctions = (params = {}) => async dispatch => {\n      try {\n        dispatch({\n          type: AUCTION_LIST_REQUEST\n        });\n        const {\n          data\n        } = await axios.get(this.LIST_URL, params);\n        dispatch({\n          type: AUCTION_LIST_SUCCESS,\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: AUCTION_LIST_FAIL,\n          payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        });\n      }\n    };\n\n    this.getAuctionDetail = id => async dispatch => {\n      try {\n        dispatch({\n          type: AUCTION_DETAIL_REQUEST\n        });\n        const {\n          data\n        } = await axios.get(this.BASE_URL + `${id}/`);\n        dispatch({\n          type: AUCTION_DETAIL_SUCCESS,\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: AUCTION_DETAIL_FAIL,\n          payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        });\n      }\n    };\n\n    this.makeOffer = (id, price) => async (dispatch, getState) => {\n      try {\n        dispatch({\n          type: OFFER_MAKE_REQUEST\n        });\n        const {\n          userLogin: {\n            userInfo\n          }\n        } = getState();\n        const config = {\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        const {\n          data\n        } = await axios.post(this.BASE_URL + `${id}/` + this.MAKE_OFFER_URL, price, config);\n        dispatch({\n          type: OFFER_MAKE_SUCCESS\n        });\n      } catch (error) {\n        dispatch({\n          type: OFFER_MAKE_FAIL,\n          payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        });\n      }\n    };\n\n    this.listRecentOffers = id => async dispatch => {\n      try {\n        dispatch({\n          type: OFFER_LIST_REQUEST\n        });\n        const {\n          data\n        } = await axios.get(this.BASE_URL + `${id}/` + '');\n        dispatch({\n          type: OFFER_LIST_SUCCESS,\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: OFFER_LIST_FAIL,\n          payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        });\n      }\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/services/AuctionService.js"],"names":["axios","AUCTION_LIST_REQUEST","AUCTION_LIST_SUCCESS","AUCTION_LIST_FAIL","AUCTION_DETAIL_REQUEST","AUCTION_DETAIL_SUCCESS","AUCTION_DETAIL_FAIL","OFFER_MAKE_REQUEST","OFFER_MAKE_SUCCESS","OFFER_MAKE_FAIL","OFFER_LIST_REQUEST","OFFER_LIST_SUCCESS","OFFER_LIST_FAIL","AuctionService","BASE_URL","LIST_URL","MAKE_OFFER_URL","listAuctions","params","dispatch","type","data","get","payload","error","response","detail","message","getAuctionDetail","id","makeOffer","price","getState","userLogin","userInfo","config","headers","Authorization","token","post","listRecentOffers"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { \n    AUCTION_LIST_REQUEST,\n    AUCTION_LIST_SUCCESS,\n    AUCTION_LIST_FAIL,\n\n    AUCTION_DETAIL_REQUEST,\n    AUCTION_DETAIL_SUCCESS,\n    AUCTION_DETAIL_FAIL,\n } from '../constants/auctionConstants'\n\nimport {\n    OFFER_MAKE_REQUEST,\n    OFFER_MAKE_SUCCESS,\n    OFFER_MAKE_FAIL,\n\n    OFFER_LIST_REQUEST,\n    OFFER_LIST_SUCCESS,\n    OFFER_LIST_FAIL\n } from '../constants/offerConstants'\n\n\nexport default class AuctionService {\n    BASE_URL = 'api/auction/'\n    LIST_URL = this.BASE_URL + 'list/'\n    MAKE_OFFER_URL = '/make-offer/'\n\n    listAuctions = (params={}) => async (dispatch) => {\n        try {\n            dispatch({type: AUCTION_LIST_REQUEST})\n            \n            const {data} = await axios.get(this.LIST_URL, params)\n    \n            dispatch({\n                type: AUCTION_LIST_SUCCESS,\n                payload: data,\n            })\n        } catch (error) {\n            dispatch({\n                type: AUCTION_LIST_FAIL,\n                payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                        : error.message,\n            })\n        }\n    }\n\n    getAuctionDetail = (id) => async (dispatch) => {\n        try {\n            dispatch({type: AUCTION_DETAIL_REQUEST})\n\n            const {data} = await axios.get(this.BASE_URL + `${id}/`)\n\n            dispatch({\n                type: AUCTION_DETAIL_SUCCESS,\n                payload: data,\n            })\n        } catch (error) {\n            dispatch({\n                type: AUCTION_DETAIL_FAIL,\n                payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                        : error.message,\n            })\n        }\n    }\n\n    makeOffer = (id, price) => async (dispatch, getState) => {\n        try {\n            dispatch({type: OFFER_MAKE_REQUEST})\n            const {\n                userLogin: {userInfo}\n            } = getState()\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const {data} = await axios.post(\n                this.BASE_URL + `${id}/` + this.MAKE_OFFER_URL,\n                price,\n                config\n            )\n\n            dispatch({type: OFFER_MAKE_SUCCESS})\n        } catch (error) {\n            dispatch({\n                type: OFFER_MAKE_FAIL,\n                payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                        : error.message,\n            })\n        }\n    }\n\n\n    listRecentOffers = (id) => async (dispatch) => {\n        try {\n            dispatch({type: OFFER_LIST_REQUEST})\n\n            const {data} = await axios.get(this.BASE_URL + `${id}/` + '')\n\n            dispatch({\n                type: OFFER_LIST_SUCCESS,\n                payload: data,\n            })\n        } catch (error) {\n            dispatch({\n                type: OFFER_LIST_FAIL,\n                payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                        : error.message,\n            })\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}