{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Documents/auctionproject/frontend/src/components/Paginate.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Pagination, Button } from 'react-bootstrap';\nimport { listItems } from '../actions/itemActions';\nimport { listLots } from '../actions/lotActions';\nimport { listAuctions } from '../actions/auctionActions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paginate({\n  type,\n  page,\n  count\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  let params = {\n    params: {\n      page: page\n    }\n  };\n\n  const paginateHandler = page_number => {\n    params.params.page = page_number;\n\n    switch (type) {\n      case 'item':\n        dispatch(listItems(params));\n\n      case 'lot':\n        dispatch(listLots(params));\n\n      case 'auction':\n        dispatch(listAuctions(params));\n    }\n  };\n\n  return count > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [...Array(count).keys()].map(x => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      activeLabel: \"\",\n      active: x + 1 === page,\n      onClick: () => paginateHandler(x + 1),\n      children: x + 1\n    }, x + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Paginate, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Paginate;\nexport default Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/components/Paginate.js"],"names":["React","Pagination","Button","listItems","listLots","listAuctions","useDispatch","Paginate","type","page","count","dispatch","params","paginateHandler","page_number","Array","keys","map","x"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAlB,EAAyC;AAAA;;AAErC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,MAAIM,MAAM,GAAG;AACTA,IAAAA,MAAM,EAAE;AACJH,MAAAA,IAAI,EAAEA;AADF;AADC,GAAb;;AAMA,QAAMI,eAAe,GAAIC,WAAD,IAAiB;AACrCF,IAAAA,MAAM,CAACA,MAAP,CAAcH,IAAd,GAAqBK,WAArB;;AAEA,YAAQN,IAAR;AACI,WAAK,MAAL;AACIG,QAAAA,QAAQ,CAACR,SAAS,CAACS,MAAD,CAAV,CAAR;;AACJ,WAAK,KAAL;AACID,QAAAA,QAAQ,CAACP,QAAQ,CAACQ,MAAD,CAAT,CAAR;;AACJ,WAAK,SAAL;AACID,QAAAA,QAAQ,CAACN,YAAY,CAACO,MAAD,CAAb,CAAR;AANR;AAUH,GAbD;;AAeA,SACIF,KAAK,GAAG,CAAR,iBACI,QAAC,UAAD;AAAA,cACK,CAAC,GAAGK,KAAK,CAACL,KAAD,CAAL,CAAaM,IAAb,EAAJ,EAAyBC,GAAzB,CAA8BC,CAAD,iBACtB,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,WAAW,EAAC,EAA7B;AAEI,MAAA,MAAM,EAAEA,CAAC,GAAG,CAAJ,KAAUT,IAFtB;AAGI,MAAA,OAAO,EAAE,MAAMI,eAAe,CAACK,CAAC,GAAG,CAAL,CAHlC;AAAA,gBAKKA,CAAC,GAAG;AALT,OACSA,CAAC,GAAG,CADb;AAAA;AAAA;AAAA;AAAA,YADP;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AAeH;;GAxCQX,Q;UAEYD,W;;;KAFZC,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Pagination, Button } from 'react-bootstrap'\nimport { listItems } from '../actions/itemActions'\nimport { listLots } from '../actions/lotActions'\nimport { listAuctions } from '../actions/auctionActions'\nimport { useDispatch } from 'react-redux'\n\n\nfunction Paginate({ type, page, count }) {\n\n    const dispatch = useDispatch()\n\n    let params = {\n        params: {\n            page: page\n        }\n    }\n\n    const paginateHandler = (page_number) => {\n        params.params.page = page_number\n\n        switch (type) {\n            case 'item':\n                dispatch(listItems(params))\n            case 'lot':\n                dispatch(listLots(params))\n            case 'auction':\n                dispatch(listAuctions(params))\n        }\n            \n        \n    }\n\n    return (\n        count > 1 && (\n            <Pagination>\n                {[...Array(count).keys()].map((x) => (\n                        <Pagination.Item activeLabel=''\n                            key={x + 1}\n                            active={x + 1 === page}\n                            onClick={() => paginateHandler(x + 1)}\n                        >\n                            {x + 1}\n                        </Pagination.Item>\n                ))}\n            </Pagination>\n        )\n    )\n}\n\nexport default Paginate"]},"metadata":{},"sourceType":"module"}