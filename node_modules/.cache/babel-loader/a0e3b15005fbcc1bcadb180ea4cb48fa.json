{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Documents/auctionproject/frontend/src/screens/ItemListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listItems } from '../actions/itemActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Item from '../components/Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemListScreen() {\n  _s();\n\n  let page = 1;\n  const dispatch = useDispatch();\n  const itemList = useSelector(state => state.itemList);\n  const {\n    loading,\n    error,\n    items,\n    previous,\n    next,\n    count\n  } = itemList;\n  console.log('items:', items);\n  console.log('prev:', previous);\n  console.log('next:', next);\n  useEffect(() => {\n    dispatch(listItems());\n  }, [dispatch]);\n\n  const prevHandler = () => {\n    params = {\n      'page': page + 1\n    };\n    dispatch(listItems(params));\n  };\n\n  const nextHandler = () => {\n    dispatch(listItems(next));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 32\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 35\n        }, this) : items.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"info\",\n          children: \"No Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 52\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              md: 6,\n              lg: 4,\n              xl: 3,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                item: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 49\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), previous && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: prevHandler,\n      children: \"prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this), next && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: nextHandler,\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemListScreen, \"Uv/TFK8ouPmHqq322911jUS24+Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemListScreen;\nexport default ItemListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListScreen\");","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/screens/ItemListScreen.js"],"names":["React","useEffect","Row","Col","Button","useDispatch","useSelector","listItems","Loader","Message","Item","ItemListScreen","page","dispatch","itemList","state","loading","error","items","previous","next","count","console","log","prevHandler","params","nextHandler","length","map","item","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { listItems } from '../actions/itemActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Item from '../components/Item'\n\n\nfunction ItemListScreen() {\n\n    let page = 1\n\n    const dispatch = useDispatch()\n\n    const itemList = useSelector(state => state.itemList)\n    const {loading, error, items, previous, next, count} = itemList\n\n    console.log('items:', items)\n    console.log('prev:', previous)\n    console.log('next:', next)\n\n    useEffect(() => {\n        dispatch(listItems())\n    }, [dispatch])\n\n    const prevHandler = () => {\n        params = {\n            'page': page + 1\n        }\n        dispatch(listItems(params))\n    }\n\n    const nextHandler = () => {\n        dispatch(listItems(next))\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <h2>Items</h2>\n                    {loading ? <Loader />\n                        : error ? <Message variant='danger'>{error}</Message>\n                            : items.length === 0 ? <Message variant='info'>No Items</Message>\n                                : <div>\n                                    <Row>\n                                        {items.map(item => (\n                                            <Col key={item.id} sm={12} md={6} lg={4} xl={3}>\n                                                <Item item={item} />\n                                            </Col>\n                                        ))}\n                                    </Row>\n                                  </div>\n                    }\n                </Col>\n            </Row>\n            {previous && <Button onClick={prevHandler}>prev</Button>}\n            {next && <Button onClick={nextHandler}>next</Button>}\n        </div>\n    )\n}\n\nexport default ItemListScreen\n"]},"metadata":{},"sourceType":"module"}