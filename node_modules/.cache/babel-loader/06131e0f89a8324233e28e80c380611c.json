{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { itemListReducer } from './reducers/itemReducers';\nimport { lotListReducer } from './reducers/lotReducers';\nimport { auctionListReducer, auctionDetailReducer } from './reducers/auctionReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  itemList: itemListReducer,\n  lotList: lotListReducer,\n  auctionList: auctionListReducer,\n  userLogin: userLoginReducer,\n  auctionDetail: auctionDetailReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/andrei/Documents/auctionproject/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","itemListReducer","lotListReducer","auctionListReducer","auctionDetailReducer","userLoginReducer","reducer","itemList","lotList","auctionList","userLogin","auctionDetail","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACIC,eADJ,QAEO,yBAFP;AAIA,SACIC,cADJ,QAEO,wBAFP;AAIA,SACIC,kBADJ,EAEIC,oBAFJ,QAGO,4BAHP;AAKA,SACIC,gBADJ,QAEO,yBAFP;AAIA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC5BU,EAAAA,QAAQ,EAAEN,eADkB;AAE5BO,EAAAA,OAAO,EAAEN,cAFmB;AAG5BO,EAAAA,WAAW,EAAEN,kBAHe;AAI5BO,EAAAA,SAAS,EAAEL,gBAJiB;AAK5BM,EAAAA,aAAa,EAAEP;AALa,CAAD,CAA/B;AAQA,MAAMQ,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMG,YAAY,GAAG;AACjBP,EAAAA,SAAS,EAAE;AAACQ,IAAAA,QAAQ,EAAEN;AAAX;AADM,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACpB,KAAD,CAAnB;AACA,MAAMqB,KAAK,GAAGxB,WAAW,CAACU,OAAD,EAAUW,YAAV,EAAwBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { \n    itemListReducer\n} from './reducers/itemReducers'\n\nimport { \n    lotListReducer\n} from './reducers/lotReducers'\n\nimport { \n    auctionListReducer,\n    auctionDetailReducer\n} from './reducers/auctionReducers'\n\nimport { \n    userLoginReducer\n} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    itemList: itemListReducer,\n    lotList: lotListReducer,\n    auctionList: auctionListReducer,\n    userLogin: userLoginReducer,\n    auctionDetail: auctionDetailReducer\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}